from aiogram import Router, types, F
from aiogram.filters import Command
from config import config
from utils.keyboards import main_menu_keyboard
import os
import pandas as pd
import logging

router = Router()
logger = logging.getLogger(__name__)

def check_admin(user_id: int) -> bool:
    return user_id in config.ADMIN_IDS

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    if not check_admin(message.from_user.id):
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    status = "‚ùå –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
    if os.path.exists(config.CONTACTS_FILE):
        try:
            contacts = pd.read_excel(config.CONTACTS_FILE)
            status = f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω ({len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)"
        except Exception as e:
            status = f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞: {str(e)}"
    
    await message.answer(
        f"üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–°—Ç–∞—Ç—É—Å: {status}",
        reply_markup=main_menu_keyboard()
    )

@router.message(F.text == "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def show_settings(message: types.Message):
    contacts_status = "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞"
    if os.path.exists(config.CONTACTS_FILE):
        try:
            df = pd.read_excel(config.CONTACTS_FILE)
            contacts_status = f"‚úÖ {len(df)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
        except:
            contacts_status = "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è"
    
    await message.answer(
        f"‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
        f"‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã: {contacts_status}\n"
        f"‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–æ–≤: {len(config.ADMIN_IDS)}\n"
        f"‚Ä¢ –ü–æ—á—Ç–∞: {'‚úÖ' if config.EMAIL_FROM else '‚ùå'}\n"
        f"‚Ä¢ WhatsApp: {'‚úÖ' if config.TELEGRAM_PHONE else '‚ùå'}\n"
        f"‚Ä¢ Telegram: {'‚úÖ' if config.TELEGRAM_BOT_TOKEN else '‚ùå'}",
        reply_markup=main_menu_keyboard()
    )