import openpyxl
from aiogram import Router, types, F
from aiogram.types import Message
from config import config
import os
import tempfile
import shutil
from datetime import datetime
import logging

router = Router()
logger = logging.getLogger(__name__)

def check_admin(user_id: int) -> bool:
    return user_id in config.ADMIN_IDS

async def create_backup():
    if os.path.exists(config.CONTACTS_FILE):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_file = os.path.join(config.BACKUP_DIR, f"backup_{timestamp}.xlsx")
        shutil.copy2(config.CONTACTS_FILE, backup_file)

def load_data(file_path):
    # Load the Excel file
    workbook = openpyxl.load_workbook(file_path)
    sheets_data = {}
    
    # Get the sheet names
    sheet_names = workbook.sheetnames
    
    # Load data from each sheet and remove empty rows
    for sheet_name in sheet_names:
        sheet = workbook[sheet_name]
        data = []
        for row in sheet.iter_rows(values_only=True):
            if any(row):  # Check if the row is not empty
                data.append(row)
        sheets_data[sheet_name] = data
    
    return sheets_data

@router.message(F.text == "üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")
async def request_file(message: types.Message):
    if not check_admin(message.from_user.id):
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    await message.answer(
        "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel-—Ñ–∞–π–ª —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:\n\n"
        "- –õ–∏—Å—Ç '–ì—Ä—É–ø–ø–∞ –ê' (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —Ä—É—Å—Å–∫–æ–π –ê)\n"
        "- –õ–∏—Å—Ç '–ì—Ä—É–ø–ø–∞ –ë' (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —Ä—É—Å—Å–∫–æ–π –ë)\n"
        "- –ö–æ–ª–æ–Ω–∫–∏: Email, WhatsApp, Telegram"
    )

@router.message(F.document & (F.document.file_name.endswith(('.xlsx', '.xls'))))
async def handle_excel(message: Message):
    if not check_admin(message.from_user.id):
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    temp_path = None
    try:
        with tempfile.NamedTemporaryFile(delete=False, suffix='.xlsx') as tmp:
            temp_path = tmp.name

        file = await message.bot.get_file(message.document.file_id)
        await message.bot.download_file(file.file_path, temp_path)

        await create_backup()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
        excel_file = openpyxl.load_workbook(temp_path)
        sheet_names = excel_file.sheetnames
        
        required_sheets = {'–ì—Ä—É–ø–ø–∞ –ê', '–ì—Ä—É–ø–ø–∞ –ë'}
        missing_sheets = required_sheets - set(sheet_names)
        
        if missing_sheets:
            await message.answer(
                f"‚ùå –í —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ª–∏—Å—Ç—ã: {', '.join(missing_sheets)}\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ—á–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ:\n"
                "- '–ì—Ä—É–ø–ø–∞ –ê' (—Ä—É—Å—Å–∫–∞—è –ê)\n"
                "- '–ì—Ä—É–ø–ø–∞ –ë' (—Ä—É—Å—Å–∫–∞—è –ë)"
            )
            return

        sheets_data = load_data(temp_path)

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ

        await message.answer("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

    except Exception as e:
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
        )
    finally:
        if temp_path and os.path.exists(temp_path):
            try:
                os.remove(temp_path)
            except:
                pass
